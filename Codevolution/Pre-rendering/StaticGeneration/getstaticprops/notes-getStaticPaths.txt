Pre-rendering & Data Fetching Intro

What and why of pre-rendering

Types of pre-rendering

1. Static Generation
- without data(i.e without getStaticProps/getStaticPaths)
- with data(i.e with getStaticProps/getStaticPaths)
- Incremental Static Generation
- dynamic parameters when fetching data

2. Server-side Rendering
- data fetching

Client-side data fetching

Combining pre-rendering with client-side data fetching


getStaticProps :

1.
getStaticProps runs only on the server side
The function will never run client-side
The code you write inside getStaticProps won't even be included in the JS bundle that is sent to the
browser

2.
You can write server-side code directly in getStaticProps
Accessing the file system using the fs module or querying a database can be done inside getStaticProps
You also don't have to worry about including API keys in getStaticProps as that won't make it to the
browser

3.
getStaticProps is allowed only in a page and cannot be run from a regular component file.
It is used only for pre-rendering and not client-side data fetching.

4.
getStaticProps should return an object and object should contain a props key which is an object*
In our example, we returned an object & the object contained a props key which was an object as well.

5.
getStaticProps will run at build time.
During development, getStaticProps runs on every request.


Any <Link/> component in the viewport (initially or through scroll) will be prefetched by default
(including the corresponding data) for pages using Static Generation.

-When a page with getStaticProps is pre-rendered at build time, in addition to the page HTML file,
Next.js generates a JSON file holding the result of running getStaticProps.

-The JSON file will be used in client-side routing through next/link, or next/router.

-When you navigate to a page thatâ€™s pre-rendered using getStaticProps, Next.js fetches the JSON
file (pre-computed at build time) and uses it as the props to create the page component client-side.